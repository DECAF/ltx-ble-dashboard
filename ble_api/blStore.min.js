const blStore=(()=>{"use strict";const e="V0.26 / 14.01.2024",t="blStore",o="blStore",r=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;if(!r)return void alert("ERROR: 'indexedDB' not supported");let n=null;const a={k:"",ts:0,v:""};let c,s=!0,i=0;function u(e=1){return new Promise(t=>setTimeout(t,e))}function f(e="readonly"){const t=n.transaction(o,e).objectStore(o);return s=!0,c=void 0,i=0,t}return function(){const a=r.open(t,1);a.onsuccess=function(e){n=this.result,s=!1},a.onerror=function(e){alert("indexedDB request error"),console.error("indexedDB request error"),console.log(e),s=!1,i=e.target.error.message},a.onupgradeneeded=function(t){t.target.result.createObjectStore(o,{keyPath:"k"})&&console.log("Upgrade DB",e)}}(),{result:()=>c,get:async e=>{if(await async function(e){for(;!0===s;)await u(1);try{const t=f().get(e);t.onerror=function(e){i=e.target.error.message,s=!1},t.onsuccess=function(e){c=t.result,s=!1}}catch(e){i="ERROR(Store get): "+e,s=!1}for(;!0===s;)await u(1)}(e),i)throw i},set:async(e,t)=>{if(await async function(e,t){for(;!0===s;)await u(1);a.k=e,a.ts=Date.now(),a.v=t;try{const e=f("readwrite").put(a);e.onerror=function(e){i=e.target.error.message,s=!1},e.onsuccess=function(e){s=!1}}catch(e){i="ERROR(Store put): "+e,s=!1}for(;!0===s;)await u(1)}(e,t),i)throw i},count:async()=>{if(await async function(){for(;!0===s;)await u(1);const e=f().count();for(e.onerror=function(e){i=e.target.error.message,s=!1},e.onsuccess=function(t){c=e.result,s=!1};!0===s;)await u(1)}(),i)throw i},iterate:async(e,t)=>{if(await async function(e,t){for(;!0===s;)await u(1);try{const o=f().openCursor(t);o.onerror=function(e){i=e.target.error.message,s=!1},o.onsuccess=function(t){const o=t.target.result;o?(e?e(o.value):console.log("Iterate: ",o.value),o.continue()):s=!1}}catch(e){i="ERROR(Store iterate): "+e,s=!1}for(;!0===s;)await u(1)}(e,t),i)throw i},clearStore:async()=>{if(await async function(){for(;!0===s;)await u(1);const e=f("readwrite").clear();for(e.onerror=function(e){i=e.target.error.message,s=!1},e.onsuccess=function(e){s=!1};!0===s;)await u(1)}(),i)throw i},remove:async e=>{if(await async function(e){for(;!0===s;)await u(1);try{const t=f("readwrite").delete(e);t.onerror=function(e){i=e.target.error.message,s=!1},t.onsuccess=function(e){s=!1}}catch(e){i="ERROR(Store delete): "+e,s=!1}for(;!0===s;)await u(1)}(e),i)throw i},version:e}})();"undefined"!=typeof module&&void 0!==module.exports?module.exports.blStore=blStore:"function"==typeof define&&define.amd?define([],function(){return blStore}):window.blStore=blStore;